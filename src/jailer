#!/usr/bin/env bash
. /usr/local/lib/heather/colors

function print_command {
	printf "  %-25s %-45s %s\n"\
		"$(echo -en "${THEME_BOLD}$1$RST")"\
		"$(echo -en "${THEME_STANDOUT}$2$RST")" "$3"
}

function print_help {
	printf "\n$(box $CYAN "Heather's Jail management system")\n\n"
	printf "A user-friendly tool designed to simplify the creation and management of FreeBSD jails.\n\n"

	case $1 in
		"template")
			print_command "new" "name url" "creates a new template image"
			print_command "delete" "name" "deletes a template image"
			print_command "list" "" "print out the available templates"
		;;
		*)
			printf "$(box $CYAN "Available God Commands")\n\n"
			printf "Usage: $BOLD${GREEN}jailer ${THEME_BOLD}command ${THEME_STANDOUT}[args]$RST\n\n"

			print_command "create" "jail template" "Create a Jail and it's base configuration."
			print_command "destroy" "jail" "Destroy a Jail and its configuration."
			print_command "template" "[new|delete|?]" "template command"
			print_command "running" "" "grabs a list of running Jails"
		
			printf "\n\n$(box $CYAN "Available Jail commands")\n\n"
			printf "Usage: $BOLD${GREEN}jailer $BOLD${WHITE}jail ${THEME_BOLD}command ${THEME_STANDOUT}[args]$RST\n\n"
			print_command "start" "" "Start a Jail"
			print_command "stop" "" "Stop a Jail"
			print_command "restart" "" "Restart a Jail"
			print_command "list" "" "List the jails"
			print_command "install" "packages..." "Install packages to a Jail"
			print_command "remove" "packages..." "Remove packages from a Jail"
			print_command "shell" "user [cmd]" "Run a shell or a command in the Jail"
			echo
		;;
	esac

}


function create_jail {
	jail_name=$1
	template=$2@base # 14.2-RELEASE@base
	network=$(netstat -rn | grep default | awk '{print $4}'| head -n 1 | tr -d '\n')

	DEFAULT_CONFIG="""
$jail_name {
  # STARTUP/LOGGING
  exec.start = \"/bin/sh /etc/rc\";
  exec.stop = \"/bin/sh /etc/rc.shutdown\";
  exec.consolelog = \"/var/log/jail_console_\${name}.log\";
  exec.jail_user = \"$USER\";
  
	persist;
  devfs_ruleset = 5;

  # PERMISSIONS
  allow.raw_sockets;
  mount.devfs;

  # HOSTNAME/PATH
  host.hostname = \"\${name}\";
  path = \"/usr/local/jails/containers/\${name}\";

  # NETWORK
  ip4 = inherit;
  interface = $network;
}
"""

	sudo zfs clone zroot/jails/templates/$template zroot/jails/containers/$jail_name
	sudo chroot /usr/local/jails/containers/$jail_name pw groupadd $USER -g $UID
	sudo chroot /usr/local/jails/containers/$jail_name pw useradd $USER -u $UID -m -d /home/$USER -s /bin/sh
	sudo bash -c "echo '$DEFAULT_CONFIG' > /etc/jail.conf.d/$jail_name.conf"
}

function destroy_jail {
	sudo service jail stop $1
	sleep 3
	jkill -f $1

	sudo chflags -R 0 /usr/local/jails/containers/$1
	
	sudo umount /usr/local/jails/containers/$1/dev
	sudo zfs destroy zroot/jails/containers/$1
	sudo rm -rf /usr/local/jails/containers/$1 /etc/jail.conf.d/$1.conf
}

function template_handler {
	case $1 in
		"new")
			sudo fetch $3 -o /usr/local/jails/media/$2
			sudo zfs create -p zroot/jails/templates/$2
			sudo tar --no-xattrs -xf /usr/local/jails/media/$2 -C /usr/local/jails/templates/$2 --unlink
			sudo cp /etc/resolv.conf /usr/local/jails/templates/$2/etc/
			sudo cp /etc/localtime /usr/local/jails/templates/$2/etc/
			sudo zfs snapshot zroot/jails/templates/$2@base
			;;
		"delete")
			sudo zfs destroy -d zroot/jails/templates/$2@base
			sudo zfs destroy zroot/jails/templates/$2
			sudo rm /usr/local/jails/media/$2
			;;
		"list")
			ls -1 /usr/local/jails/templates/
			;;
		*)
			print_help "template"
			;;
	esac
	

}

function linuxify {
	network=$(netstat -rn | grep default | awk '{print $4}'| head -n 1 | tr -d '\n')
	DEFAULT_CONFIG="""
$1 {
	exec.start = \"/bin/true\";
  exec.stop = \"/bin/true\";
  # STARTUP/LOGGING
  exec.consolelog = \"/var/log/jail_console_\${name}.log\";
  exec.jail_user = \"$USER\";
  
	persist;
  devfs_ruleset = 5;

  # PERMISSIONS
  allow.raw_sockets;
  mount.devfs;
	allow.mount;
  allow.mount.devfs;

  # HOSTNAME/PATH
  host.hostname = \"\${name}\";
  path = \"/usr/local/jails/containers/\${name}\";

  # NETWORK
  ip4 = inherit;
  interface = $network;
	mount.fstab=\"/usr/local/jails/containers/\${name}/etc/fstab\";
}
"""
FSTAB="""
devfs           /usr/local/jails/containers/$1/dev      devfs           rw                      0       0
tmpfs           /usr/local/jails/containers/$1/dev/shm  tmpfs           rw,size=1g,mode=1777    0       0
fdescfs         /usr/local/jails/containers/$1/dev/fd   fdescfs         rw,linrdlnk             0       0
linprocfs       /usr/local/jails/containers/$1/proc     linprocfs       rw                      0       0
linsysfs        /usr/local/jails/containers/$1/sys      linsysfs        rw                      0       0
"""
	sudo bash -c "echo 'root:*:0:0: &:/root:/bin/bash' > /usr/local/jails/containers/$1/etc/master.passwd"
	sudo /usr/sbin/pwd_mkdb -d /usr/local/jails/containers/$1/etc -p /usr/local/jails/containers/$1/etc/master.passwd
	sudo chroot /usr/local/jails/containers/$1 echo "exit 0">> /etc/rc.local
	sudo chroot /usr/local/jails/containers/$1 echo "exit 0">> /etc/rc.shutdown
	sudo chroot /usr/local/jails/containers/$1 ln -s /bin/bash /usr/local/bin/bash
	sudo bash -c "echo '$FSTAB' > /usr/local/jails/containers/$1/etc/fstab"
	sudo bash -c "echo '$DEFAULT_CONFIG' > /etc/jail.conf.d/$1.conf"
	echo -e "${RED}IF YOU WANT APT AND SUCH, COPY THE PASSWD FILE FROM THE TEMPLATE INTO THE JAIL$RST"
}

case $2 in
	"linuxify")
		linuxify $1
		;;
	"start")
		echo -e $(box $CYAN "Starting Jail '$1'")
		sudo service jail start $1
		;;
	"stop")
		echo -e $(box $CYAN "Stoping Jail '$1'")
		sudo service jail stop $1
		;;
	"restart")
		echo -e $(box $CYAN "Restarting Jail '$1'")
		sudo service jail restart $1
		;;
	"install")
		sudo pkg -j $1 install ${@:3}
		;;
	"remove")
		sudo pkg -j $1 remove ${@:3}
		;;
	"shell")
		sudo jexec -u $3 $1 ${@:4}
		;;
		*)
		case $1 in
			"destroy")
				echo -e $(box $CYAN "Destroying Jail '$2'")
				destroy_jail $2
				;;
			"create")
				echo -e $(box $CYAN "Creating Jail '$2'")
				create_jail $2 ${@:3}
				;;
			"template")
				template_handler ${@:2}
				;;
			"list")
				ls -1 /usr/local/jails/containers
				;;
			"running")
				sudo service jail status
				;;
			*)
				print_help
				;;
		esac
		;;
esac


